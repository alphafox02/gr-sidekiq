id: sidekiq_rx
label: Sidekiq RX Source
category: '[sidekiq]'

templates:
  imports: import sidekiq
  make: sidekiq.sidekiq_rx(${card}, ${handle1}, ${handle2}, ${sample_rate}, ${gain}, ${gain_mode}, ${frequency}, ${bandwidth}, ${sync_type} )
  callbacks: 
  - set_rx_sample_rate(${sample_rate})
  - set_rx_gain(${gain})
  - set_rx_frequency(${frequency})
  - set_rx_bandwidth(${bandwidth})
  - set_rx_filter_override_taps(${filter_override_taps})
  
#  Make one 'parameters' list entry for every parameter you want settable from the GUI.
#     Keys include:
#     * id (makes the value accessible as keyname, e.g. in the make entry)
#     * label (label shown in the GUI)
#     * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)

parameters:
- id: card
  label: Card
  dtype: int
  default: 0
- id: handle1
  label: Handle Id1
  dtype: enum
  options: ['0', '1', '2', '3', '4', '5']
  option_labels: ['RxA1', 'RxA2', 'RxB1', 'RxB2', 'RxC1', 'RxD1']
  default: 0
- id: handle2
  label: Handle Id2
  dtype: enum
  options: ['100', '0', '1', '2', '3', '4', '5']
  option_labels: ['None', 'RxA1', 'RxA2', 'RxB1', 'RxB2', 'RxC1', 'RxD1']
  default: 100
- id: sample_rate
  label: Sample Rate
  dtype: real
  default: 1e6
- id: gain
  label: Gain
  dtype: int
  default: 1
- id: gain_mode
  label: Gain Mode
  dtype: enum
  options: ['0', '1']
  option_labels: ['Manual', 'Auto']
  default: 0
- id: frequency
  label: Frequency
  dtype: real
  default: 2400e6
- id: bandwidth
  label: Bandwidth
  default: 1e6
  dtype: real
- id: sync_type
  label: Sync Type
  dtype: enum
  options: ['1','2', '3']
  option_labels: ['Zero', 'GPS PPS', 'PC Clock']
  default: 1
- id: filter_override_taps
  label: Filter Override Taps
  dtype: real_vector

#  Make one 'inputs' list entry per input and one 'outputs' list entry per output.
#  Keys include:
#      * label (an identifier for the GUI)
#      * domain (optional - stream or message. Default is stream)
#      * dtype (e.g. int, float, complex, byte, short, xxx_vector, ...)
#      * vlen (optional - data stream vector length. Default is 1)
#      * optional (optional - set to 1 for optional inputs. Default is 0)

inputs:
- label: command
  domain: message
  optional: true
  
outputs:
- label: Samples
  domain: stream
  dtype: complex
  multiplicity: ${ (2 if (handle2 != '100') else 1) }
  #  multiplicity: 2
  vlen: 1018
  optional: false
- label: telemetry
  domain: message
  optional: true
  
#  'file_format' specifies the version of the GRC yml format used in the file
#  and should usually not be changed.
file_format: 1

